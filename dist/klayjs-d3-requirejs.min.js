/*! klayjs-d3-requirejs version 0.3.4 build 201602020202*/
var klay;!function(a){function b(a){function b(a){var b=m/a.width||1,d=n/a.height||1;b>d&&(b=d),c&&c.attr("transform","scale("+b+")")}var c,d,e={},f=d3.dispatch("finish"),g=[],h=[],i={},j=function(a){return a.ports||[]},k=function(a){return a.labels||[]},l={},m=0,n=0,o=[10,10],p=[4,4],q=["x","y","width","height","sourcePoint","targetPoint","properties"].reduce(function(a,b){return a[b]=1,a},{}),r=function(){};if(!d)if("object"==typeof module&&module.exports)d=require("klayjs");else{if("undefined"==typeof $klay)throw"klay.js library wasn't loaded!";d=$klay}if(e.size=function(a){return arguments.length?(m=a[0],n=a[1],e):[m,n]},e.transformGroup=function(a){return arguments.length?(c=a,e):c},e.options=function(a){return arguments.length?(l=a,e):l},"adapter"===a){e.nodes=function(a){return arguments.length?(g=a,e):g},e.ports=function(a){return arguments.length?(j=a,e):j},e.links=function(a){return arguments.length?(h=a,e):h},e.defaultNodeSize=function(a){return arguments.length?(o=a,e):o},e.defaultPortSize=function(a){return arguments.length?(p=a,e):p},e.start=function(){return g.forEach(function(a,b){a.width=a.width||o[0],a.height=a.height||o[1],a.id=""+(a.id||b),a.ports=j(a),a.ports.forEach(function(a){a.width=a.width||p[0],a.height=a.height||p[1]}),a.labels=k(a)}),h.forEach(function(a,b){a.id=""+(a.id||b+g.length),a.source=""+a.source,a.target=""+a.target}),r=s,d.layout({graph:{id:"root",children:g,edges:h},options:l,success:function(a){i=a,r(a)},error:function(a){console.error(a)}}),e};var s=function(a){function c(a,b,c){var d=q;c&&(d=c.reduce(function(a,b){return a[b]=1,a},{}));for(var e in a)d[e]&&(b[e]=a[e])}a&&(b(a),a.children.forEach(function(a){var b=g[parseInt(a.id)];c(a,b),(a.ports||[]).forEach(function(a,d){c(a,b.ports[d])}),(a.labels||[]).forEach(function(a,d){c(a,b.labels[d])})}),a.edges.forEach(function(a){var b=h[parseInt(a.id)-g.length];c(a,b),c(a.source,b.source),c(a.target,b.target),b.bendPoints=a.bendPoints||[]})),f.finish({graph:a})}}if("kgraph"===a){e.nodes=function(){for(var a,b=[i],c=[];null!=(a=b.pop());)c.push(a),(a.children||[]).forEach(function(a){b.push(a)});return c},e.links=function(a){return d3.merge(a.map(function(a){return a.edges||[]}))},e.kgraph=function(a){return r=t,d.layout({graph:a,options:l,success:function(a){i=a,r(a)},error:function(a){console.error(a)}}),e};var t=function(a){b(a);var c={};u(a,{x:0,y:0},c),w(a,c),f.finish({graph:a})},u=function(a,b,c){a.x=(a.x||0)+b.x,a.y=(a.y||0)+b.y,c[a.id]=a,(a.children||[]).forEach(function(b){b.parent=a,u(b,{x:a.x,y:a.y},c)})},v=function(a,b){for(var c=b.parent;c;){if(c==a)return!0;c=c.parent}return!1},w=function(a,b){(a.edges||[]).forEach(function(a){var c=b[a.source],d=b[a.target],e=v(c,d)?c:c.parent,f={x:0,y:0};e&&(f.x=e.x,f.y=e.y),a.sourcePoint&&(a.sourcePoint.x+=f.x||0,a.sourcePoint.y+=f.y||0),a.targetPoint&&(a.targetPoint.x+=f.x||0,a.targetPoint.y+=f.y||0),(a.bendPoints||[]).forEach(function(a){a.x+=f.x,a.y+=f.y})}),(a.children||[]).forEach(function(a){w(a,b)})}}return d3.rebind(e,f,"on")}return a.d3adapter=function(){return b("adapter")},a.d3kgraph=function(){return b("kgraph")},"object"==typeof module&&module.exports&&(module.exports=a),a}(klay||(klay={})),define(["$klay","d3"],function(a,b){"use strict";function c(c){function d(a){var b=o/a.width||1,c=p/a.height||1;b>c&&(b=c),e&&e.attr("transform","scale("+b+")")}var e,f,g={},h=b.dispatch("finish"),i=[],j=[],k={},l=function(a){return a.ports||[]},m=function(a){return a.labels||[]},n={},o=0,p=0,q=[10,10],r=[4,4],s=["x","y","width","height","sourcePoint","targetPoint","properties"].reduce(function(a,b){return a[b]=1,a},{}),t=function(){};if(!f)if("object"==typeof module&&module.exports)f=require("klayjs");else{if("undefined"==typeof a)throw"klay.js library wasn't loaded!";f=a}if(g.size=function(a){return arguments.length?(o=a[0],p=a[1],g):[o,p]},g.transformGroup=function(a){return arguments.length?(e=a,g):e},g.options=function(a){return arguments.length?(n=a,g):n},"adapter"===c){g.nodes=function(a){return arguments.length?(i=a,g):i},g.ports=function(a){return arguments.length?(l=a,g):l},g.links=function(a){return arguments.length?(j=a,g):j},g.defaultNodeSize=function(a){return arguments.length?(q=a,g):q},g.defaultPortSize=function(a){return arguments.length?(r=a,g):r},g.start=function(){return i.forEach(function(a,b){a.width=a.width||q[0],a.height=a.height||q[1],a.id=""+(a.id||b),a.ports=l(a),a.ports.forEach(function(a){a.width=a.width||r[0],a.height=a.height||r[1]}),a.labels=m(a)}),j.forEach(function(a,b){a.id=""+(a.id||b+i.length),a.source=""+a.source,a.target=""+a.target}),t=u,f.layout({graph:{id:"root",children:i,edges:j},options:n,success:function(a){k=a,t(a)},error:function(a){console.error(a)}}),g};var u=function(a){function b(a,b,c){var d=s;c&&(d=c.reduce(function(a,b){return a[b]=1,a},{}));for(var e in a)d[e]&&(b[e]=a[e])}a&&(d(a),a.children.forEach(function(a){var c=i[parseInt(a.id)];b(a,c),(a.ports||[]).forEach(function(a,d){b(a,c.ports[d])}),(a.labels||[]).forEach(function(a,d){b(a,c.labels[d])})}),a.edges.forEach(function(a){var c=j[parseInt(a.id)-i.length];b(a,c),b(a.source,c.source),b(a.target,c.target),c.bendPoints=a.bendPoints||[]})),h.finish({graph:a})}}if("kgraph"===c){g.nodes=function(){for(var a,b=[k],c=[];null!=(a=b.pop());)c.push(a),(a.children||[]).forEach(function(a){b.push(a)});return c},g.links=function(a){return b.merge(a.map(function(a){return a.edges||[]}))},g.kgraph=function(a){return t=v,f.layout({graph:a,options:n,success:function(a){k=a,t(a)},error:function(a){console.error(a)}}),g};var v=function(a){d(a);var b={};w(a,{x:0,y:0},b),y(a,b),h.finish({graph:a})},w=function(a,b,c){a.x=(a.x||0)+b.x,a.y=(a.y||0)+b.y,c[a.id]=a,(a.children||[]).forEach(function(b){b.parent=a,w(b,{x:a.x,y:a.y},c)})},x=function(a,b){for(var c=b.parent;c;){if(c==a)return!0;c=c.parent}return!1},y=function(a,b){(a.edges||[]).forEach(function(a){var c=b[a.source],d=b[a.target],e=x(c,d)?c:c.parent,f={x:0,y:0};e&&(f.x=e.x,f.y=e.y),a.sourcePoint&&(a.sourcePoint.x+=f.x||0,a.sourcePoint.y+=f.y||0),a.targetPoint&&(a.targetPoint.x+=f.x||0,a.targetPoint.y+=f.y||0),(a.bendPoints||[]).forEach(function(a){a.x+=f.x,a.y+=f.y})}),(a.children||[]).forEach(function(a){y(a,b)})}}return b.rebind(g,h,"on")}return a.d3adapter=function(){return c("adapter")},a.d3kgraph=function(){return c("kgraph")},a});